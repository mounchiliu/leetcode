https://www.lintcode.com/problem/two-sum-unique-pairs/description

难点：如何处理重复元素
Sol: 排序，排好后重复元素都堆在一起，当从挪动指针的时候一直挪到与当前位置所指的元素不同的时候为止
最好不要先删除重复元素，再找数值，因为针对特殊数组e.g.[7,7] target = 14， 这个时候其实是有解的，但是你删完重复元素，就没解了


class Solution {
public:
    /**
     * @param nums: an array of integer
     * @param target: An integer
     * @return: An integer
     */
    int twoSum6(vector<int> &nums, int target) {
        // write your code here
        if(nums.size() <= 1)
            return 0;
            
        sort(nums.begin(), nums.end());    
        int left = 0, right = nums.size() - 1;
        int cnt = 0;
        while(left < right){
            if(nums[left] + nums[right] == target){
                cnt++;
                
                //去重
                while(left + 1 < right && nums[left] == nums[left + 1]){
                    left++;
                }
                while(left < right - 1 && nums[right] == nums[right - 1]){
                    right--;
                }
                left++; right--;
            }else if(nums[left] + nums[right] < target){
                left++;
            }else if(nums[left] + nums[right] > target){
                right--;
            }
        }
        return cnt;
    }
};
