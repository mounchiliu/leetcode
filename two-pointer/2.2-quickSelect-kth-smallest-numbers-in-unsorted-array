https://www.lintcode.com/problem/kth-smallest-numbers-in-unsorted-array/description
类比 0.9 kth-largest-element(已整理)

class Solution {
public:
    /**
     * @param k: An integer
     * @param nums: An integer array
     * @return: kth smallest element
     */
    int kthSmallest(int k, vector<int> &nums) {
        // write your code here
        if(nums.size() == 0){
            return -1;
        }
        
        return quickSelect(nums, 0, nums.size()-1, k-1);//注意k-1， 第k个对应index k-1
    }
    
private:
    int quickSelect(vector<int> &nums, int start, int end, int k){
        if(start >= end){
            return nums[k];//or return nums [start];
        }
        
        int left = start, right = end;
        int pivot = nums[start + (end - start) / 2];
        while(left <= right){
            while(left <= end && nums[left] < pivot){
                left++;
            }
            while(left <= end && nums[right] > pivot){
                right--;
            }
            
            if(left <= right){
                swap(nums[left], nums[right]);
                
                left++;
                right--;
            }
        }
        
        if(k <= right){
            return quickSelect(nums, start, right, k);
        }
        if(k >= left){
            return quickSelect(nums, left, end, k);
        }
        return nums[k];
    }
};
