https://www.lintcode.com/problem/valid-palindrome-ii/description

class Solution {
public:
    /**
     * @param s: a string
     * @return bool: whether you can make s a palindrome by deleting at most one character
     */
    bool validPalindrome(string &s) {
        // Write your code here
        //双指针算法。从两头走到中间，发现第一对不一样的字符之后，要么删左边的，要么删右边的。 --- 证明可见双指针的预习NOTES
        if(s.size() <= 1)
            return true;
            
        int left = 0, right = s.size() - 1;
        while(left < right){
            if(s[left] != s[right]){
                return (isValid(s, left + 1, right) || isValid(s, left, right - 1)); //两种删字符的情况都要考虑
                //【截取字符串有一定的性能消耗，最好记录、传入指针操作子串】
            }
            left++;
            right--;
        }
        return true;
        
    }
    
private:
    bool isValid(string &s, int left, int right){
        if(s.size() <= 1)
            return true;
            
        while(left < right){
            if(s[left] != s[right]){
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
};
