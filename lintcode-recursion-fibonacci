https://www.lintcode.com/problem/fibonacci/description

1递归会耗费栈空间，所以n很大时容易出现stack overflow
2斐波那契数列的递归算法的时间复杂度最坏的情况是O(2^N)
e.g. 使用以下方法实现菲波那切数列时，在n=41超时，时间复杂度太大 --- 解决方法，写成non-recursive的方法 (从前往后推导)
class Solution {
public:
    /**
     * @param n: an integer
     * @return: an ineger f(n)
     */
    int fibonacci(int n) {
        // write your code here
        if(n==1) return 0;
        if(n==2) return 1;
        
        return fibonacci(n-1)+fibonacci(n-2);
    }
};

//开辟数组
class Solution {
public:
    /**
     * @param n: an integer
     * @return: an ineger f(n)
     */
    int fibonacci(int n) {
        // write your code here
        int F[n];
        
        //n=1; n=2
        F[0] = 0; F[1] = 0; F[2] = 1;
        
        if(n<=2){
            return F[n];
        }else{
            for(int i=3; i<=n; i++){
                F[i] = F[i-1] + F[i-2];
            }
            return F[n];
        }
    }
};

