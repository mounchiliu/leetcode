https://www.lintcode.com/problem/split-string/description
组合问题

class Solution {
public:
    /*
     * @param : a string to be split
     * @return: all possible split string array
     */
    vector<vector<string>> splitString(string& s) {
        // write your code here
        if(s.size() == 0){
            return {{}};
        }
        if(s.size() == 1){
            return {{s}};
        }
        
        vector<vector<string>> results;
        vector<string> path;
        search(results, path, s, 0);
        return results;
    }
    
private:
    void search(vector<vector<string>> &results, vector<string> &path, string &s, int startIndex){
        if(startIndex == s.size()){
            results.push_back(path);
            return;
        }
        if(startIndex > s.size()){//防止startIndex + 2的时候越界
            return;
        }
        
        //采用dfs解决此问题，每次向下递归时要么删除一个字符，要么删除两个字符。
        //get one letter in the form of string
        string str = s.substr(startIndex, 1);
        path.push_back(str);
        search(results, path, s, startIndex+1);
        path.pop_back();
        
        str = s.substr(startIndex,2);
        path.push_back(str);
        search(results, path, s, startIndex+2);
        path.pop_back();
    }
};
